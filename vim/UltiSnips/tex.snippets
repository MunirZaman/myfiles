global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def nomath(): 
    return vim.eval('vimtex#syntax#in_mathzone()') != '1' 

def comment(): 
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
    return x != '0' and x != '0'

endglobal


snippet \art "article preamble" b
\documentclass[11pt,numbers=noenddot,svgnames]{scrartcl}
\usepackage[top=1in, left=1in, right=1in, bottom=1in]{geometry}
\usepackage{evanart}
\begin{document}
$1
\end{document}
endsnippet

snippet \book "article preamble" b
\documentclass[11pt,numbers=noenddot,svgnames]{scrbook}
\usepackage[top=1in, left=1in, right=1in, bottom=1in]{geometry}
\usepackage{evanbook}
\begin{document}
$1
\end{document}
endsnippet

snippet \usep "use package" iA
\usepackage{$1}
endsnippet


context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)//' "Fraction" irA
\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)//' "() Fraction" irA
`!p
stripped = match.string[:-2]
depth = 0
i = len(stripped) - 1
while True:
    if stripped[i] == ')': depth += 1
    if stripped[i] == '(': depth -= 1
    if depth == 0: break;
    i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet


snippet \begin "\begin{env}" bA
\begin{$1}
    $0
\end{$1}
endsnippet


snippet \[ "display math" bA
\[
    $1
\]
endsnippet

snippet $ "inline math" iA
\$$1\$
endsnippet


context "math()"
snippet \\[ "3rd bracket" iA
\left[$1\right]
endsnippet

context "math()"
snippet \\{ "2rd bracket" iA
\left\{$1\right\}
endsnippet

context "math()"
snippet \\( "1st bracket" iA
\left($1\right)
endsnippet


context "math()"
snippet ... "cdots" iA
\cdots
endsnippet

context "math()"
snippet if "implies" w
\implies
endsnippet


context "math()"
snippet _ "sub" iA
_{$1}
endsnippet

context "math()"
snippet ^ "power" iA
^{$1}
endsnippet

context "math()"
snippet == "equiv" iA
\equiv $1
endsnippet


context "math()"
snippet RR "Reals" iA
\mathbb{R}
endsnippet

context "math()"
snippet ZZ "Integers" iA
\mathbb{Z}
endsnippet

context "math()"
snippet NN "Natural Numbers" iA
\mathbb{N}
endsnippet


snippet @@def "definition" bA
\begin{definition}
    $1
\end{definition}
endsnippet

snippet @@thm "theorem" bA
\begin{theorem}
    $1
\end{theorem}
endsnippet

snippet @@exa "example" bA
\begin{example}
    $1
\end{example}
endsnippet

snippet @@coro "corollary" bA
\begin{corollary}
    $1
\end{corollary}
endsnippet

snippet @@prf "proof" bA
\begin{proof}
    $1
\end{proof}
endsnippet

snippet @@sol "solution" bA
\begin{sol}
    $1
\end{sol}
endsnippet

snippet @@prob "problem" bA
\begin{problem}
	$1
\end{problem}
endsnippet

snippet @@lem "lemma" bA
\begin{lemma}
	$1
\end{lemma}
endsnippet

snippet @@pycon "python console" bA
\begin{mdcode}
\begin{minted}[mathescape, breaklines, ]{pycon}
$1
\end{minted}
\end{mdcode}
endsnippet

snippet @@pypy "pytho code block" bA
\begin{mdcode}
\begin{minted}[mathescape, breaklines, linenos]{python}
$1
\end{minted}
\end{mdcode}
endsnippet

snippet @@pyin "input python code" bA
\inputminted[mathescape, breaklines, linenos]{python}{$1}
endsnippet

